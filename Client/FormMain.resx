<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyIcon1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHRSQAB0UkAAdFJAAHRSQAB0UkAKdFJAZHRSQHh0UkABdFJAAAAA
        AAAAAAAAAAAAAAAAAADZsbEA2bGxANmxsXbZsbFl2bGxCtmxsQDZsbEA2bGxANmxsQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0UkAAdFJAAHRSQAB0UkACdFJAO3RSQKp0UkD5dFJAnXRS
        QAB0UkAAAAAAAAAAAAAAAAAAAAAAANmxsQDZsbEA2bGxmtmxsfnZsbGq2bGxO9mxsQLZsbEA2bGxANmx
        sQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0UkAAdFJAAHRSQAB0UkAAdFJAJnRSQJB0UkDrdFJA/3RS
        QP90UkCcdFJAAHRSQAAAAAAAAAAAAAAAAAAAAAAA2bGxANmxsQDZsbGZ2bGx/9mxsf/ZsbHr2bGxj9mx
        sSXZsbEA2bGxANmxsQDZsbEAAAAAAAAAAAB0UkAAdFJAAHRSQAB0UkAAdFJAFnRSQHN0UkDbdFJA/3RS
        QP90UkD/dFJA/3RSQJx0UkAAdFJAAAAAAAAAAAAAAAAAAAAAAADZsbEA2bGxANmxsZfZsbH/2bGx/9mx
        sf/ZsbH/2bGx29mxsXLZsbEV2bGxANmxsQDZsbEA2bGxAHRSQAB0UkAAdFJACnRSQFd0UkDHdFJA/nRS
        QP90UkD/dFJA/3RSQP90UkD/dFJAnHRSQAB0UkAAAAAAAAAAAAAAAAAAAAAAANmxsQDZsbEA2bGxldmx
        sf/ZsbH/2bGx/9mxsf/ZsbH/2bGx/tmxscXZsbFV2bGxCdmxsQDZsbEAdFJAA3RSQD10UkCudFJA93RS
        QP90UkD/dFJA/3RSQP90UkD/dFJA/3RSQP90UkCcdFJAAHRSQAAAAAAAAAAAAAAAAAAAAAAA2bGxANmx
        sQDZsbGW2bGx/9mxsf/ZsbH/2bGx/9mxsf/ZsbH/2bGx/9mxsffZsbGs2bGxO9mxsQN0UkCddFJA63RS
        QP90UkD/dFJA/3RSQP91U0H/e1hG/3ZUQv90UkD/dFJA/3RSQJx0UkAAdFJAAAAAAAAAAAAAAAAAAAAA
        AADZsbEA2bGxANmxsZbZsbH/2bGx/9mxsf/ZsbH/2bGx/9mxsf/ZsbH/2bGx/9mxsf/ZsbHq2bGxlXRS
        QP90UkD/dFJA/3RSQP90UkD/dFJA/3VTQf+HYk//iGJQ/3xZRv91U0H/c1E/m6+ZiQBJHwsA/fTmAAAA
        AAAAAAAAAAAAANmxsQDZsbEA2bGxltmxsf/ZsbH/2bGx/9mxsf/ZsbH/2bGx/9mxsf/ZsbH/2bGx/9mx
        sf/ZsbH1dFJA/3RSQP90UkD/dFJA/3RSQP90UkD/dVNB/4diT/+OaFX/jGZT/4RgTf+CYE6k////Avrw
        4gD99OYA/fTmAAAAAAAAAAAA2bGxANmxsQDZsbGW2bGx/9mxsf/ZsbH/2bGx/9mxsf/ZsbH/2bGx/9mx
        sf/ZsbH/2bGx/9mxsfJ0UkD/dFJA/3RSQP90UkD/dFJA/3RSQP91U0H/h2JP/41nVP+NZ1T/jGVS/7OY
        hu399eeM/fTmI/305gD99OYA/fTmAP305gDZsbEA2bGxANmxsZbZsbH/2bGx/9mxsf/ZsbH/2bGx/9mx
        sf/ZsbH/2bGx/9mxsf/ZsbH/2bGx8nRSQP90UkD/dFJA/3RSQP90UkD/dFJA/3VTQf+HYk//jWdU/41n
        VP+LZFH/uZ+O//305v/99ObY/fTmbv305hP99OYA/fTmANmxsQDZsbEA2bGxltmxsf/ZsbH/2bGx/9mx
        sf/ZsLD/1qyt/9mwsP/ZsbH/2bGx/9mxsf/ZsbHydFJA/3RSQP90UkD/dFJA/3RSQP90UkD/dVNB/4di
        T/+NZ1T/jWdU/4tkUf+5no3//fTm//305v/99Ob+/fTmt/305hj99OYA2bGxANmxsQDZsbGW2bGx/9mx
        sf/ZsbH/1qyt/9Chov/Onp//2K+v/9mxsf/ZsbH/2bGx/9mxsfJ0UkD/dFJA/3RSQP90UkD/dFJA/3RS
        QP91U0H/h2JP/41nVP+NZ1T/i2RR/7mejf/99Ob//fTm//305v/99Obr/fTmKf305gDZsbEA2bKyANmx
        sZbZsbH/166v/9Kkpf/Mm5z/y5eZ/82cnv/Yr6//2bGx/9mxsf/ZsbH/2bGx8nRSQP90UkD/dFJA/3RS
        QP90UkD/dFJA/3VTQf+HYk//jWdU/41nVP+KZFH/uJ2M//305v/99Ob//fTm//305uj99OYp/fTmAOfS
        yQDhxb4A166uldOnqP/OnZ7/y5ia/8uYmv/LmJr/zp2e/9ivr//ZsbH/2bGx/9mxsf/ZsbHydFJA/3RS
        QP90UkD/dFJA/3RSQP90UkD/dVNB/4diT/+NZ1T/i2VS/5VyX//Puqr//vXn//305v/99Ob//fTm6P30
        5in47N8A6NTKBenWy0jcu7bRzp6f/8qXmf/LmJr/y5ia/8uYmv/OnZ7/2K+v/9mxsf/ZsbH/2bGx/9mx
        sfJ0UkD/dFJA/3RSQP90UkD/dFJA/3RSQP91U0H/hmBO/5FsWf+yl4X/5NXG//zz5f/99Ob//fTm//30
        5v/99Obo/fXnKOPMwwro1MqT6NTK8ujTyv/iyMD/1a2r/8yanP/Ll5n/y5ia/86dnv/Yr6//2bGx/9mx
        sf/ZsbH/2bGx8nRSQP90UkD/dFJA/3RSQP90UkD/dFJA/3VTQf2ihHL+2si4//rw4v/+9uj//fTm//30
        5v/99Ob//fTm//305uj+9ucn5tHHHOjUyuLo1Mr/6NTK/+jVy//n08n/38K7/9Knpv/LmJr/zZye/9iv
        r//ZsbH/2bGx/9mxsf/ZsbHydFJA/3RSQP90UkD/dFJA/3RSQP90UkDWeVhGb+7i05f/9uj0/fTm//30
        5v/99Ob//fTm//305v/99Ob//fXn6P/77iXm0cgb6NTK3+jUyv/o1Mr/6NTK/+jUyv/o1cv/5tDH/9y7
        tv/Spqb+2K+v/9mxsf/ZsbH/2bGx/9mxsfJ0UkD/dFJA/3RSQP90UkDndFJAiHRSQCGKa1oA////Bv30
        5k399Oa//fTm/P305v/99Ob//fTm//715//569vu5MOqP+jWzRvo1cvf6NTK/+jUyv/o1Mr/6NTK/+jU
        yv/o1Mr/6NXK/+XNxd3as7OV2bGx59mxsf/ZsbH/2bGx8XRSQP90UkDzdFJAo3RSQDR0UkAAdFJAAAAA
        AAD+9ecA/fTmAP305hH99OZr/fTm1v716P778eL/79jD/92zlv/MknDazpl7jOXNwOfp1cz/6NTK/+jU
        yv/o1Mr/6NTK/+jUyv/o1Mr/6NXKzujUyhLZsLA02bGxpdmxsfXZsbH1dFJAtXRSQE10UkAGdFJAAHRS
        QAB0UkAAdFJAAP305gDw28cA+OvbAOLApwD36dkm7NG8vOG7n//YqIf/1aOC/8uSb//IjWn/ypV0/tu4
        pP/n0cb/6dXM/+jUyv/o1Mr/6NTK/+jUyv/o1MrR6NTKEt26uADZsbEH2bGxUNmxsax0UkALdFJAAHRS
        QAB0UkAAdFJAAAAAAADJjmsAyY5rAMmOawDJjmoAyY5rLsiNaZjJjWrtzJJv/9KefP/Vo4L/y5Jv/8iM
        af/Cglr/woNc/86cff/fwbD/6NTJ/+jVy//o1Mr/6NTK/+jUyq/o1MoM6dXLANmxsQDZsbEA2bGxCnRS
        QAB0UkAAdFJAAAAAAADJjmsAyY5rAMmOawDJjmsAyY5rHMmOa37JjmviyY5r/8mOa//Jjmv/yY9s/82U
        cv/KkG3/yIxp/8KDW//BgVn/wIBX/8SHYf/SpYr/4si5/+jVy9zo1ct26NTKGOjUygDo1MoA2bGxANmx
        sQDZsbEAAAAAAAAAAAAAAAAAyY5rAMmOawDJjmsAyY5rDsmOa2LJjmvQyY5r/8mOa//Jjmv/yY5r/8mO
        a//Jjmv/yY5r/8mOa//IjGn/woNb/8GBWf/BgVn/wYBY/8GBWf/JkW/90J+CmMeKZRTTpYoAyIxoAMqR
        bwDJjmsAAAAAAAAAAAAAAAAAAAAAAAAAAADJjmsAyY5rCMmOa0vJjmu5yY5r+8mOa//Jjmv/yY5r/8mO
        a//Jjmv/yY5r/8mOa//Jjmv/yY5r/8iMaf/Cg1v/wYFZ/8GBWf/DhV7/x4tm/8mNav/JjWr8yY5rxsmO
        a1jJjmsMyY5rAMmOawAAAAAAAAAAAAAAAAAAAAAAAAAAAMmOawDJjmsnyY5rwMmOa//Jjmv/yY5r/8mO
        a//Jjmv/yY5r/8mOa//Jjmv/yY5r/8mOa//Jjmv/yIxp/8KDW//DhF3/xoll/8mNav/Jjmv/yY5r/8mO
        a//Jjmv/yY5rzsmOazXJjmsAyY5rAAAAAAAAAAAAAAAAAAAAAAAAAAAAyY5rAMmOawDJjmsdyY5rf8mO
        a+PJjmv/yY5r/8mOa//Jjmv/yY5r/8mOa//Jjmv/yY5r/8mOa//IjWr/xolk/8iNaf/Jjmv/yY5r/8mO
        a//Jjmv/yY5r6MmOa4rJjmsjyY5rAcmOawDJjmsAAAAAAAAAAAAAAAAAAAAAAAAAAADJjmsAyY5rAMmO
        awDJjmsAyY5rL8mOa53JjmvxyY5r/8mOa//Jjmv/yY5r/8mOa//Jjmv/yY5r/8mOa//Jjmv/yY5r/8mO
        a//Jjmv/yY5r9cmOa6bJjms3yY5rAcmOawDJjmsAyY5rAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAyY5rAMmOawDJjmsAyY5rBMmOa0fJjmu4yY5r+8mOa//Jjmv/yY5r/8mOa//Jjmv/yY5r/8mO
        a//Jjmv/yY5r/MmOa8DJjmtPyY5rB8mOawDJjmsAyY5rAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAyY5rAMmOawDJjmsAyY5rAMmOaw7JjmtjyY5r0MmOa//Jjmv/yY5r/8mO
        a//Jjmv/yY5r/8mOa9XJjmtqyY5rEcmOawDJjmsAyY5rAMmOawAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMmOawDJjmsAyY5rAMmOawDJjmscyY5rf8mO
        a+LJjmv/yY5r/8mOa+XJjmuGyY5rIMmOawDJjmsAyY5rAMmOawAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADJjmsAyY5rAMmO
        awDJjmsAyY5rN8mOa7LJjmu3yY5rO8mOawDJjmsAyY5rAMmOawAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA+APAH/ADwA/AA8ADAAPAAAADwAAAA8AAAAPAAAABwAAAAMAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABAAAADgAAAD4AAAA+AA
        AAPgAAAD4AAAB/gAAB/8AAA//wAA///AA/8=
</value>
  </data>
</root>